import logging

from aiogram import types, F
from aiogram.filters import Command, CommandObject

import keyboards
from data.config import ADMINS
from database import SessionLocal
from loader import dp, bot
from utils.db.queries import get_user, create_user
from aiogram.fsm.context import FSMContext
from states.data_collection import Form


@dp.message(Command("start"))
# @dp.message(CommandStart(deep_link=True))
async def cmd_start(message: types.Message,
                    command: CommandObject,
                    state: FSMContext):
    try:
        async with SessionLocal.begin() as session:
            user = await get_user(session,
                                  message.from_user.id)
            if user is None:
                await create_user(session,
                                  message.from_user.id,
                                  message.from_user.username,
                                  message.from_user.full_name)
            # session.commit()  # –ë–û–õ–¨–®–ï –ù–ï –ò–°–ü–û–õ–¨–ó–£–ï–ú. –ê–í–¢–û–ö–û–ú–ú–ò–¢ –†–ê–ë–û–¢–ê–ï–¢
    except Exception as ex:
        logging.error(ex)
        try:
            await bot.send_message(message.from_user.id, '''–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—á–Ω–∏—Ç–µ —Å –Ω–∞—á–∞–ª–∞ -> /start''')
        except Exception as ex:
            logging.error(ex)
        return
    if command.args:
        if command.args == '777':
            await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è.')
            await state.set_state(Form.fullname)
            return
    try:
        await bot.send_message(message.from_user.id, f'''<b>–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}</b>üëã\n                                
–ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∏—è.
–Ø –ø—Ä–µ–ø–æ–¥–∞—é –π–æ–≥—É –ø–æ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ <b><i>FYSM</i></b> –≤ <u>–∑–∞–∫—Ä—ã—Ç–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–µ ¬´–ô–û–ì–ê –£ –ú–û–†–Ø¬ª.</u>

–¢–∞–º –µ—Å—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ –∑–∞–ø–∏—Å–∏ –∏ –≤ –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ.

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ <i>–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ —Å–æ –º–Ω–æ–π.</i> ''',
                               reply_markup=keyboards.default.main_menu.main_menu)
    except Exception as ex:
        logging.error(ex)
        pass


@dp.message(F.content_type.in_({'photo', 'video'}))
async def echo_files(message: types.Message):
    if str(message.from_user.id) in ADMINS:
        try:
            await bot.send_message(message.from_user.id, message.photo[0].file_id)
        except:
            await bot.send_message(message.from_user.id, message.video.file_id)
        return
